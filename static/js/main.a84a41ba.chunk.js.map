{"version":3,"sources":["Components/Modal/Modal.jsx","Components/Loans/Loans.jsx","App.jsx","index.jsx"],"names":["Modal","active","children","className","aria-hidden","onClick","e","stopPropagation","Loans","availableAmount","loansData","loans","map","loan","amount","replace","Number","reduce","prev","curr","toString","useState","availableMoney","setAvailableMoney","modalActive","setModalActive","chosenLoan","setChosenLoan","investmentValue","setInvestmentValue","investedLoans","setInvestedLoans","activeLoan","find","id","includes","type","event","preventDefault","title","available","Math","floor","term_remaining","onSubmit","investment","decreasedAmount","toLocaleString","minimumFractionDigits","investMoney","changedAmount","changeAvailable","placeholder","value","onChange","target","required","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a84a41ba.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Modal.scss';\n\nexport const Modal = ({ active, children }) => (\n  <div\n    className={active ? 'Modal active' : 'Modal'}\n    aria-hidden=\"true\"\n  >\n    <div\n      className={active ? 'Modal__content active' : 'Modal__content'}\n      onClick={e => e.stopPropagation()}\n      aria-hidden=\"true\"\n    >\n      {children}\n    </div>\n  </div>\n);\n\nModal.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import React, { useState } from 'react';\nimport './Loans.scss';\n\nimport loansData from '../../api/current-loans.json';\nimport { Modal } from '../Modal/Modal';\n\nexport const Loans = () => {\n  // preparing initial data for render in app\n  const arrOfAmounts = loansData.loans.map(loan => loan.amount);\n  const amountsWithDot = arrOfAmounts.map(amount => amount.replace(/,/g, '.'));\n  const amountsAsNumbers = amountsWithDot.map(amount => Number(amount));\n  const sumOfAmounts = amountsAsNumbers.reduce((prev, curr) => prev + curr, 0);\n  const availableAmount = sumOfAmounts.toString().replace(/[.]/g, ',');\n\n  const [availableMoney, setAvailableMoney] = useState(availableAmount);\n  const [modalActive, setModalActive] = useState(false);\n  const [chosenLoan, setChosenLoan] = useState('');\n  const [investmentValue, setInvestmentValue] = useState('');\n  const [investedLoans, setInvestedLoans] = useState([]);\n\n  // find chosen loan by id for rendering right data in popup\n  const activeLoan = loansData.loans.find(loan => loan.id === chosenLoan);\n\n  // helper function for input validation\n  const handleChange = (e) => {\n    const value = e.target.value.replace(/\\D/g, '');\n\n    if (value[0] !== '0') {\n      setInvestmentValue(Number(value).toLocaleString());\n    }\n  };\n\n  // helper function for rendering total amount available for investment\n  const investMoney = (investment) => {\n    const decreasedAmount = (\n      Number(availableMoney.replace(/[,]/g, ''))\n      - Number(investment.replace(/[,]/g, ''))\n    );\n\n    setAvailableMoney(decreasedAmount.toLocaleString(\n      'en-US', { minimumFractionDigits: 0 },\n    ));\n  };\n\n  // helper function for accounting loans that you have invested in\n  // and rendering some visual indication\n  const showInvestedLoans = (id, value) => {\n    if (value !== '0') {\n      setInvestedLoans([...investedLoans, id]);\n    }\n  };\n\n  // helper function for decreasing loan available amount\n  const changeAvailable = (id, available, investment) => {\n    const changedAmount = (\n      Number(available.replace(/[,]/g, ''))\n      - Number(investment.replace(/[,]/g, ''))\n    );\n\n    const loanToChange = loansData.loans.find(loan => loan.id === id);\n\n    loanToChange.available = changedAmount.toLocaleString(\n      'en-US', { minimumFractionDigits: 0 },\n    );\n  };\n\n  return (\n    <>\n      <div className=\"Loans\">\n        <div className=\"Loans__loans-wrapper\">\n          {loansData.loans.map(loan => (\n            <div className=\"Loans__loan-block\" key={loan.id}>\n              <div className=\"Loans__loan-title\">\n                <p className=\"Loans__loan-name\">Loan name</p>\n                <p className=\"Loans__loan-details\">Loan details and values</p>\n              </div>\n              <div className=\"Loans__loan-actions\">\n                <p className={investedLoans.includes(loan.id)\n                  ? 'Loans__loan-invested active'\n                  : 'Loans__loan-invested'}\n                >\n                  Invested\n                </p>\n                <button\n                  type=\"button\"\n                  className=\"Loans__loan-button\"\n                  onClick={(event) => {\n                    event.preventDefault();\n                    setModalActive(true);\n                    setChosenLoan(loan.id);\n                  }}\n                >\n                  Invest\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n        <section className=\"Loans__amount-remain\">\n          <p>\n            Total amount available for investment:\n          </p>\n          <p>\n            {`$${availableMoney}`}\n          </p>\n        </section>\n        <Modal active={modalActive}>\n          <>\n            {activeLoan && (\n              <div className=\"Loans__modal-container\">\n                <button\n                  type=\"button\"\n                  className=\"Loans__close-button\"\n                  onClick={(event) => {\n                    event.preventDefault();\n                    setModalActive(false);\n                    setChosenLoan('');\n                    setInvestmentValue('');\n                  }}\n                >\n                  â•³\n                </button>\n                <p className=\"Loans__modal-slogan\">\n                  Invest in Loan\n                </p>\n                <p className=\"Loans__modal-title\">\n                  {activeLoan.title}\n                </p>\n                <div className=\"Loans__modal-details\">\n                  <p className={Number(investmentValue.replace(/[,]/g, ''))\n                    - Number(activeLoan.available.replace(/[,]/g, '')) > 0\n                    && 'Loans__loan-error'}\n                  >\n                    {`Amount available: $${activeLoan.available}`}\n                  </p>\n                  <p>\n                    {`Loan ends in: ${Math.floor(\n                      activeLoan.term_remaining / 86400,\n                    )} days`}\n                  </p>\n                </div>\n                <p className=\"Loans__modal-amount\">\n                  Investment amount\n                </p>\n                <form\n                  className=\"Loans__modal-form\"\n                  onSubmit={(event) => {\n                    event.preventDefault();\n                    setModalActive(false);\n                    showInvestedLoans(activeLoan.id, investmentValue);\n                    investMoney(investmentValue);\n                    changeAvailable(\n                      activeLoan.id,\n                      activeLoan.available,\n                      investmentValue,\n                    );\n                    setInvestmentValue('');\n                  }}\n                >\n                  <input\n                    type=\"text\"\n                    className=\"Loans__modal-input\"\n                    placeholder=\"0\"\n                    value={investmentValue}\n                    onChange={handleChange}\n                    required\n                  />\n                  <button\n                    type=\"submit\"\n                    className={Number(investmentValue.replace(/[,]/g, ''))\n                      - Number(activeLoan.available.replace(/[,]/g, '')) > 0\n                      ? 'Loans__loan-button disabled' : 'Loans__loan-button'}\n                  >\n                    Invest\n                  </button>\n                </form>\n              </div>\n            )}\n          </>\n        </Modal>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport './App.scss';\n\nimport { Loans } from './Components/Loans/Loans';\n\nexport const App = () => (\n  <div className=\"App\">\n    <header className=\"App__header\">\n      Current Loans\n    </header>\n    <Loans />\n  </div>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}